<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Workaround for INT-1831 -->
	<bean id="dummy" class="java.util.Date" />

	<context:annotation-config />

	<bean class="org.springframework.batch.core.scope.StepScope" />

	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
		<property name="taskExecutor" ref="jobLauncherTaskExecutor" />
	</bean>

	<task:executor id="jobLauncherTaskExecutor" pool-size="6" rejection-policy="ABORT" />

	<task:executor id="poolTaskExecutor" pool-size="600" rejection-policy="CALLER_RUNS" />

	<bean id="throttledTaskExecutor" class="org.springframework.batch.admin.util.ThrottledTaskExecutor">
		<property name="taskExecutor" ref="poolTaskExecutor" />
	</bean>

	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.SimpleJobRepository">
		<constructor-arg name="jobInstanceDao" ref="jobInstanceDao"/>
		<constructor-arg name="jobExecutionDao" ref="jobExecutionDao"/>
		<constructor-arg name="stepExecutionDao" ref="jobExecutionDao"/>
		<constructor-arg name="executionContextDao" ref="executionContextDao"/>
	</bean>

	<bean id="jobExplorer" class="org.springframework.batch.core.explore.support.SimpleJobExplorer">
		<constructor-arg name="jobInstanceDao" ref="jobInstanceDao"/>
		<constructor-arg name="jobExecutionDao" ref="jobExecutionDao"/>
		<constructor-arg name="stepExecutionDao" ref="jobExecutionDao"/>
		<constructor-arg name="executionContextDao" ref="executionContextDao"/>
	</bean>

	<bean id="jobLoader" class="org.springframework.batch.core.configuration.support.AutomaticJobRegistrar">
		<property name="applicationContextFactories">
			<bean class="org.springframework.batch.core.configuration.support.ClasspathXmlApplicationContextsFactoryBean">
				<property name="resources" value="classpath*:/META-INF/spring/batch/jobs/*.xml" />
			</bean>
		</property>
		<property name="jobLoader">
			<bean class="org.springframework.batch.core.configuration.support.DefaultJobLoader">
				<property name="jobRegistry" ref="jobRegistry" />
			</bean>
		</property>
	</bean>

	<bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry" />
 
	<bean id="jobService" class="org.springframework.batch.admin.service.MarkLogicJobService">
		<constructor-arg name="jobRepository" ref="jobRepository" />
		<constructor-arg name="jobLauncher" ref="jobLauncher" />
		<constructor-arg name="jobLocator" ref="jobRegistry" />
		<constructor-arg name="jobExplorer" ref="jobExplorer" />
	</bean>
	
	<bean id="jobInstanceDao" class="com.marklogic.spring.batch.core.repository.dao.MarkLogicJobInstanceDao">
		<constructor-arg name="databaseClient" ref="databaseClient" />
	</bean>
	
	<bean id="jobExecutionDao" class="com.marklogic.spring.batch.core.repository.dao.MarkLogicJobExecutionDao">
		<constructor-arg name="databaseClient" ref="databaseClient" />
	</bean>
	
	<bean id="stepExecutionDao" class="com.marklogic.spring.batch.core.repository.dao.MarkLogicStepExecutionDao">
		<constructor-arg name="databaseClient" ref="databaseClient" />
		<property name="jobExecutionDao">
			<bean id="jobExecutionDao" class="com.marklogic.spring.batch.core.repository.dao.MarkLogicJobExecutionDao" />
		</property>
	</bean>
	
	<bean id="executionContextDao" class="com.marklogic.spring.batch.core.repository.dao.MarkLogicExecutionContextDao">
		<constructor-arg name="databaseClient" ref="databaseClient" />
	</bean>
	
<!-- 
	<task:scheduled-tasks>
		<task:scheduled ref="jobService" method="removeInactiveExecutions" fixed-delay="${batch.job.service.reaper.interval}"/>
	</task:scheduled-tasks>
-->
</beans>